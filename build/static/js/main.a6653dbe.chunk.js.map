{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","base.js","components/login.js","components/AddFishForm.js","components/EditFishForm.js","components/Inventory.js","components/Order.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","go2Store","event","preventDefault","data","current","value","console","log","props","history","push","onSubmit","this","className","ref","type","required","placeholder","defaultValue","Component","Header","firstPart","lastPart","tagline","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Login","onClick","authenticate","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","fish","name","price","parseFloat","status","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","e","updatedFish","updateFish","index","onChange","deleteFish","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","error","onAuthStateChanged","Object","keys","map","key","loadSample","Order","renderOrder","fishes","count","order","isAvailable","transitionOptions","classNames","timeout","enter","exit","CSSTransition","listStyle","TransitionGroup","component","removeOrder","orderIds","total","reduce","prevTotal","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","addToOrder","indexOf","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","StrictMode","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.a6653dbe.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\", \n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport {getFunName} from \"../helpers\"\n\nclass StorePicker extends React.Component{\n    myInput = React.createRef();\n\n    static propTypes = {\n        history: propTypes.object\n    }\n\n    // constructor() {\n    //     super();\n    //     this.go2Store = this.go2Store.bind(this)\n    // }\n\n    // property = go2Store set arrow function to avoid using bindings\n    go2Store = (event) => {\n        // stop form from submitting\n        event.preventDefault();\n        // get the text from that input\n        const data = this.myInput.current.value;\n        console.log(data);\n        // change the page to /store/...\n        this.props.history.push(`/store/${data}`)\n    }\n    render() {\n        // This is the Store Selector\n        return (\n            <>\n                <form onSubmit={this.go2Store} className=\"store-selector\">\n                    <h2>Please Enter Store Name</h2>\n                    <input ref={this.myInput} type=\"text\" required placeholder=\"Store Name\" defaultValue={getFunName()}/>\n                    <button type=\"submit\">Visit Store ➡️</button>\n                </form>\n            </>\n        )\n    }\n}\nexport default StorePicker;","import React from \"react\";\nimport propTypes from \"prop-types\";\n\n\nconst Header = ({firstPart, lastPart, tagline}) => \n    (\n        <header className=\"top\">\n                <h1>{firstPart}\n                    <span className=\"ofThe\">\n                    <span className=\"of\">Of</span>\n                    <span className=\"the\">The</span>\n                    </span>\n                    {lastPart}\n                </h1>\n            <h3 className=\"tagline\">\n                <span>{tagline}</span>\n            </h3>\n        </header>\n    )\n\n    Header.propTypes = {\n        tagline: propTypes.string.isRequired,\n        firstPart: propTypes.string.isRequired, \n        lastPart: propTypes.string.isRequired,\n    }\n    \nexport default Header","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyAa-SV8NOdp9o1WgdcADV0FpHW1MuatITI\",\n    authDomain: \"fish-store-2022.firebaseapp.com\",\n    databaseURL: \"https://fish-store-2022-default-rtdb.firebaseio.com\",\n    // projectId: \"fish-store-2022\",\n    // storageBucket: \"fish-store-2022.appspot.com\",\n    // messagingSenderId: \"132631468803\",\n    // appId: \"1:132631468803:web:cb24e6dad522bd5b07a736\",\n    // measurementId: \"G-LT5B3PNQR5\"\n})\n\n// firebase  App - rebase binding\nconst base = Rebase.createClass(firebaseApp.database());\n\n// this is a named export \nexport { firebaseApp };\n\n// this is the default export \nexport default base;","import React from \"react\";\nimport propTypes from 'prop-types'\nconst Login = (props) => (\n    <nav className=\"login\">\n        <h2>Login</h2>\n        <p>Sign in to manage your store's inventory.</p>\n        <button className=\"github\" onClick={() => props.authenticate('Github')}>Login in with Github</button>\n        <button className=\"twitter\" onClick={() => props.authenticate('Twitter')}>Login in with Twitter</button>\n        <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>Login in with Facebook</button>\n\n    </nav>\n)\n\nLogin.propTypes = {\n    authenticate: propTypes.func.isRequired\n}\n\nexport default Login","import React from \"react\";\nimport propTypes from 'prop-types'\n\nclass AddFishForm extends React.Component {\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n\n    static propTypes = {\n        match: propTypes.object,\n    }\n\n    createFish = (event) => {\n        event.preventDefault();\n        let fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value,\n        }\n        this.props.addFish(fish);\n        event.currentTarget.reset();\n    }\n    render() {\n        return (\n                <form className=\"fish-edit\" onSubmit={this.createFish}>\n                    <input type=\"text\" placeholder=\"Name\" name=\"name\" ref={this.nameRef} />\n                    <input type=\"text\" placeholder=\"Price\" name=\"price\" ref={this.priceRef}/>\n                    <select name=\"status\" ref={this.statusRef}>\n                        <option value='true'>Fresh</option>\n                        <option value='false'>Sold Out</option>\n                    </select>\n                    <textarea placeholder=\"Desc\" name=\"desc\" ref={this.descRef}/>\n                    <input type=\"text\" placeholder=\"Image\" name=\"image\" ref={this.imageRef}/>\n                    <button type='submit'>+ Add Fish</button>\n                </form>\n        )\n    }\n}\n\nexport default AddFishForm;","import React from \"react\";\nimport propTypes from \"prop-types\"\nclass EditFishForm extends React.Component {\n    static propTypes = {\n        fish: propTypes.shape({\n            image: propTypes.string,\n            name: propTypes.string,\n            desc: propTypes.string,\n            status: propTypes.string,\n            price: propTypes.number,\n        }),\n        index: propTypes.string,\n        updateFish: propTypes.func\n    }\n\n    handleChange = (e) => {\n        console.log('e: ',e.currentTarget.value);\n        // update fish\n        const updatedFish = {\n            ...this.props.fish,\n            [e.currentTarget.name]: e.currentTarget.value\n        }\n        console.log(updatedFish);\n        // copy current fish\n        this.props.updateFish(this.props.index, updatedFish)\n    }\n    render() {\n        return <div className=\"fish-edit\">\n           <input type=\"text\" placeholder=\"name\" name=\"name\"  onChange={this.handleChange} value={this.props.fish.name}/>\n            <input type=\"text\" placeholder=\"price\" name=\"price\"  onChange={this.handleChange} value={this.props.fish.price}/>\n            <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n            <textarea type=\"text\" placeholder=\"desc\" name=\"desc\" onChange={this.handleChange}  value={this.props.fish.desc}/>\n            <input type=\"text\" placeholder=\"image\" name=\"image\"  onChange={this.handleChange} value={this.props.fish.image}/>\n        <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\n        </div>\n    }\n}\n\nexport default EditFishForm;","import React from \"react\";\nimport propTypes from 'prop-types'\nimport firebase from \"firebase\";\nimport base, {firebaseApp} from '../base'\nimport Login from \"./login\";\n\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\n\nclass Inventory extends React.Component {\n    /* {this.props.fishes.map(fish => <EditFishForm/>)} */\n    static propTypes = {\n        fish: propTypes.object,\n        updateFish: propTypes.func,\n        deleteFish: propTypes.func,\n        loadSample: propTypes.func,\n    }\n    \n    state = {\n        uid: null, \n        owner: null\n    }\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user=> {\n            if(user) {\n                this.authHandler({user})\n            }\n        })\n    }\n\n    authHandler = async (authData) => {\n        console.log('authData',authData);\n        const store = await base.fetch(this.props.storeId, {context: this});\n        if(!store.owner){\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            })\n        }\n\n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        })\n    }\n\n    authenticate = (provider) => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler)\n    }\n\n    logout = async () => {\n        await firebase.auth().signOut().then(()=>console.log('Signed Out'),()=>console.error('Sign out Error'));\n        this.setState({uid: null})\n        console.log('loggin out');\n    }\n\n    render() {\n\n        const logout = <button onClick={this.logout}>logout</button>\n\n        if(!this.state.uid){\n            return <Login authenticate={this.authenticate} />\n        } else if(this.state.uid !== this.state.owner){\n            return <div><p>Sorry you are not the owner</p>{logout}</div>\n        } else {\n            return (\n                    <div className=\"inventory\">\n                        <h2>Inventory</h2>\n                            {logout}\n                            {Object.keys(this.props.fish).map(key => <EditFishForm \n                                key={key} \n                                index={key} \n                                deleteFish={this.props.deleteFish} \n                                fish={this.props.fish[key]} \n                                updateFish={this.props.updateFish} \n                                />)}\n                            <AddFishForm addFish={this.props.addFish}/>\n                            <button \n                                onClick={this.props.loadSample}>Load Sample Data</button>\n                    </div>\n            )\n\n        }\n    }\n}\n\nexport default Inventory;","import React from \"react\";\nimport propTypes from 'prop-types'\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\"\nclass Order extends React.Component {\n    static propTypes ={\n        fish: propTypes.object,\n        order: propTypes.object,\n        removeOrder: propTypes.func\n    }\n    renderOrder = key => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        if(!fish)   return null;\n        const isAvailable = fish && fish.status === 'available';\n        const transitionOptions = {\n            classNames: 'order',\n            key: key,\n            timeout: {enter: 500, exit: 500}\n        };\n        if(!isAvailable) {\n            return <CSSTransition {...transitionOptions}> \n            <li>\n                Sorry { fish ? fish.name : 'fish'} is no longer available\n            </li>\n            </CSSTransition>\n        }\n        return <CSSTransition {...transitionOptions}>\n                        <li key={key} style={{listStyle: 'none'}}>\n                            <span>\n                            <TransitionGroup component=\"span\" className=\"count\">\n                                <CSSTransition classNames=\"count\" key={count} timeout={{enter: 500, exit: 500}}>\n                                    <span>{count}</span> \n                                </CSSTransition>\n                            </TransitionGroup>lbs {fish.name}\n                                {formatPrice(count * fish.price)}\n                            <button onClick={() => this.props.removeOrder(key)}>&times;</button>\n                            </span>\n                    </li>\n                </CSSTransition>\n    }\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key)=> {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === 'available';\n            if(isAvailable) {\n                return prevTotal + (count * fish.price)\n            }\n            return prevTotal;\n        }, 0)\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order</h2>\n                {/* <ul>\n                    {orderIds.map(this.renderOrder)}\n                    {/* {orderIds.map(key => <li>{key}</li>)} */}\n                {/* </ul> */} \n                <TransitionGroup component='ul'>\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className=\"total\">\n                    total: <strong>{formatPrice(total)}</strong>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Order","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport {formatPrice} from \"../helpers\"\nclass Fish extends React.Component {\n    // handleClick = () => {\n    //     this.props.addToOrder(this.props.indexOf)\n    // }\n    static propTypes = {\n        details: propTypes.shape({\n            image: propTypes.string,\n            name: propTypes.string,\n            desc: propTypes.string,\n            status: propTypes.string,\n            price: propTypes.number,\n        }),\n        addToOrder: propTypes.func\n    }\n    render() {\n        const {desc, image, name, price, status} = this.props.details;\n        const isAvailable = status === 'available';\n        return (\n            <li className=\"menu-fish\">\n                <img src={image} alt={name}/>\n                <h3 className=\"fish-name\">{name}\n                <span className=\"price\">{formatPrice(price)}</span>\n                </h3>\n                <p>{desc}</p>\n                <button onClick={() => this.props.addToOrder(this.props.indexOf)} disabled={!isAvailable}>{isAvailable ? 'Add to cart' : 'Sold out'}</button>\n            </li>\n        )\n    }\n}\n\nexport default Fish","import React from \"react\"; \nimport Header from \"./Header\";\nimport Inventory from \"./Inventory\";\nimport Order from \"./Order\";\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base'\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {},\n    }\n    \n\n    componentDidMount() {\n        const { params } = this.props.match;\n        const localStorageRef = localStorage.getItem(params.storeId);\n        console.log(localStorageRef);\n        if(localStorageRef) {\n            this.setState({\n                order: JSON.parse(localStorageRef)\n            })\n        }\n        this.ref = base.syncState(`${params.storeId}/fishes`,{\n            context: this,\n            state: 'fishes'\n        })\n        // const { params } = this.props.match;\n        // this.ref = base.syncState(`${params.storeId}/fishes`, {\n        //   context: this,\n        //   state: \"fishes\"\n        // });\n    }\n\n    componentDidUpdate() {\n        console.log('Updated');\n        console.log(this.state.order);\n        // const { params } = this.props.match;\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order))\n    }\n\n    componentWillUnmount() {\n        console.log('unmounting');\n        base.removeBinding(this.ref)\n    }\n    addFish = fish => {\n        // take copy of exsiting state\n        const fishes = {...this.state.fishes}\n        // add our data to new \n        fishes[`fish${Date.now()}`] = fish\n        // set new object to state\n        this.setState({\n            fishes: fishes\n        })\n    }\n\n    updateFish = (key, updatedFish) => {\n        // take copy of current state\n        const fishes = {...this.state.fishes};\n        // update that state\n        fishes[key] = updatedFish;\n        // set that to state\n        this.setState({ fishes : fishes}) \n    }\n\n    deleteFish = (key) => {\n        // copy state\n        const fishes = {...this.state.fishes};\n        // update state\n        fishes[key] = null;\n        // set state\n        this.setState({ fishes : fishes})\n    }\n\n    removeOrder = (key) => {\n        const order = { ...this.state.order };\n        delete order[key];\n        this.setState({ order })\n    }\n\n    loadSample = () => {\n        this.setState({ fishes : sampleFishes})\n    }\n\n    addToOrder = (key) => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. Either add to the order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    // 3. Call setState to update our state object\n    this.setState({ order });\n    }\n\n    render() {\n        return (\n            <>\n                <React.StrictMode>\n                    <div className=\"catch-of-the-day\">\n                        <div className=\"menu\">\n                            <Header\n                                firstPart=\"Fish\"\n                                lastPart=\"Store\"\n                                tagline=\"Freash Seafood Market\"\n                            />\n                            <ul className=\"fishes\">\n                                {Object.keys(this.state.fishes).map(key=> \n                                <Fish \n                                    key={key} \n                                    indexOf={key}\n                                    details={this.state.fishes[key]} \n                                    addToOrder={this.addToOrder}\n                                    />)}\n                                {/* this loops over each fish based on key*/}\n                            </ul>\n                        </div>\n                        <Order removeOrder={this.removeOrder} fishes={this.state.fishes} order={this.state.order}/>\n                        <Inventory addFish={this.addFish} updateFish={this.updateFish} deleteFish={this.deleteFish} loadSample={this.loadSample} fish={this.state.fishes} storeId={this.props.match.params.storeId}/>\n                    </div>\n                </React.StrictMode>\n            </>\n        )\n    }\n}\n\nexport default App","import React from \"react\";\n\nconst NotFound = () => \n    <div>\n        <h1>\n        Not Found!!!!!!\n        </h1>\n    </div>\n\n\nexport default NotFound","import {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\nconst Router = () => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact path='/' component={StorePicker}/>\n                <Route path=\"/store/:storeId\" component={App}/>\n                <Route component={NotFound}/>\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default Router","// let's go!\nimport React from 'react';\nimport {render} from 'react-dom';\nimport Router from './components/Router'\nimport './css/style.css';\nrender(<Router/>, document.querySelector('#main')); "],"sourceRoot":""}