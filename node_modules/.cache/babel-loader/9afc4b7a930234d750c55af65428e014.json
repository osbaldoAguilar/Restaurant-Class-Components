{"ast":null,"code":"import _classCallCheck from \"/Users/osbaldoaguilar/doIt/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/osbaldoaguilar/doIt/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/osbaldoaguilar/doIt/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/osbaldoaguilar/doIt/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/osbaldoaguilar/doIt/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/osbaldoaguilar/doIt/React-For-Beginners-Starter-Files/catch-of-the-day/src/components/Order.js\";\nimport React from \"react\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Order = /*#__PURE__*/function (_React$Component) {\n  _inherits(Order, _React$Component);\n\n  var _super = _createSuper(Order);\n\n  function Order() {\n    var _this;\n\n    _classCallCheck(this, Order);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderOrder = function (key) {\n      var fish = _this.props.fishes[key];\n      var count = _this.props.order[key];\n      if (!fish) return null;\n      var isAvailable = fish && fish.status === 'available';\n\n      if (!isAvailable) {\n        return /*#__PURE__*/_jsxDEV(CSSTransition, {\n          classNames: \"order\",\n          timeout: {\n            enter: 300,\n            exit: 300\n          },\n          transitionAppear: true,\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Sorry \", fish ? fish.name : 'fish', \" is no longer available\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, _assertThisInitialized(_this))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 20\n        }, _assertThisInitialized(_this));\n      }\n\n      return /*#__PURE__*/_jsxDEV(CSSTransition, {\n        classNames: \"order\",\n        timeout: {\n          enter: 5000,\n          exit: 5000\n        },\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            listStyle: 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, _assertThisInitialized(_this)), \"lbs \", fish.name, formatPrice(count * fish.price), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: function onClick() {\n              return _this.props.removeOrder(key);\n            },\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, _assertThisInitialized(_this))]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, _assertThisInitialized(_this))\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }, _assertThisInitialized(_this));\n    };\n\n    return _this;\n  }\n\n  _createClass(Order, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var orderIds = Object.keys(this.props.order);\n      var total = orderIds.reduce(function (prevTotal, key) {\n        var fish = _this2.props.fishes[key];\n        var count = _this2.props.order[key];\n        var isAvailable = fish && fish.status === 'available';\n\n        if (isAvailable) {\n          return prevTotal + count * fish.price;\n        }\n\n        return prevTotal;\n      }, 0);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TransitionGroup, {\n          component: \"ul\",\n          children: orderIds.map(this.renderOrder)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"total\",\n          children: [\"total: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatPrice(total)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Order;\n}(React.Component);\n\nexport default Order;","map":{"version":3,"sources":["/Users/osbaldoaguilar/doIt/React-For-Beginners-Starter-Files/catch-of-the-day/src/components/Order.js"],"names":["React","formatPrice","TransitionGroup","CSSTransition","Order","renderOrder","key","fish","props","fishes","count","order","isAvailable","status","enter","exit","name","listStyle","price","removeOrder","orderIds","Object","keys","total","reduce","prevTotal","map","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,wBAA/C;;;IACMC,K;;;;;;;;;;;;;;;;UACFC,W,GAAc,UAAAC,GAAG,EAAI;AACjB,UAAMC,IAAI,GAAG,MAAKC,KAAL,CAAWC,MAAX,CAAkBH,GAAlB,CAAb;AACA,UAAMI,KAAK,GAAG,MAAKF,KAAL,CAAWG,KAAX,CAAiBL,GAAjB,CAAd;AACA,UAAG,CAACC,IAAJ,EAAY,OAAO,IAAP;AACZ,UAAMK,WAAW,GAAGL,IAAI,IAAIA,IAAI,CAACM,MAAL,KAAgB,WAA5C;;AACA,UAAG,CAACD,WAAJ,EAAiB;AACb,4BAAO,QAAC,aAAD;AACP,UAAA,UAAU,EAAC,OADJ;AAGP,UAAA,OAAO,EAAE;AAACE,YAAAA,KAAK,EAAC,GAAP;AAAYC,YAAAA,IAAI,EAAE;AAAlB,WAHF;AAIP,UAAA,gBAAgB,EAAE,IAJX;AAAA,iCAKP;AAAA,iCACYR,IAAI,GAAGA,IAAI,CAACS,IAAR,GAAe,MAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AALO,WAEFV,GAFE;AAAA;AAAA;AAAA;AAAA,yCAAP;AASH;;AACD,0BAAO,QAAC,aAAD;AACK,QAAA,UAAU,EAAC,OADhB;AAGK,QAAA,OAAO,EAAE;AAACQ,UAAAA,KAAK,EAAC,IAAP;AAAaC,UAAAA,IAAI,EAAE;AAAnB,SAHd;AAAA,+BAIS;AAAc,UAAA,KAAK,EAAE;AAACE,YAAAA,SAAS,EAAE;AAAZ,WAArB;AAAA,kCACI;AAAA,sBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA,2CADJ,UAESH,IAAI,CAACS,IAFd,EAGKf,WAAW,CAACS,KAAK,GAAGH,IAAI,CAACW,KAAd,CAHhB,eAIA;AAAQ,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAKV,KAAL,CAAWW,WAAX,CAAuBb,GAAvB,CAAN;AAAA,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAJA;AAAA,WAASA,GAAT;AAAA;AAAA;AAAA;AAAA;AAJT,SAEUA,GAFV;AAAA;AAAA;AAAA;AAAA,uCAAP;AAWH,K;;;;;;;WACD,kBAAS;AAAA;;AACL,UAAMc,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKd,KAAL,CAAWG,KAAvB,CAAjB;AACA,UAAMY,KAAK,GAAGH,QAAQ,CAACI,MAAT,CAAgB,UAACC,SAAD,EAAYnB,GAAZ,EAAmB;AAC7C,YAAMC,IAAI,GAAG,MAAI,CAACC,KAAL,CAAWC,MAAX,CAAkBH,GAAlB,CAAb;AACA,YAAMI,KAAK,GAAG,MAAI,CAACF,KAAL,CAAWG,KAAX,CAAiBL,GAAjB,CAAd;AACA,YAAMM,WAAW,GAAGL,IAAI,IAAIA,IAAI,CAACM,MAAL,KAAgB,WAA5C;;AACA,YAAGD,WAAH,EAAgB;AACZ,iBAAOa,SAAS,GAAIf,KAAK,GAAGH,IAAI,CAACW,KAAjC;AACH;;AACD,eAAOO,SAAP;AACH,OARa,EAQX,CARW,CAAd;AASA,0BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAC,IAA3B;AAAA,oBACKL,QAAQ,CAACM,GAAT,CAAa,KAAKrB,WAAlB;AADL;AAAA;AAAA;AAAA;AAAA,gBANJ,eASI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,6CACW;AAAA,sBAASJ,WAAW,CAACsB,KAAD;AAApB;AAAA;AAAA;AAAA;AAAA,kBADX;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAeH;;;;EAvDevB,KAAK,CAAC2B,S;;AA0D1B,eAAevB,KAAf","sourcesContent":["import React from \"react\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\"\nclass Order extends React.Component {\n    renderOrder = key => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        if(!fish)   return null;\n        const isAvailable = fish && fish.status === 'available';\n        if(!isAvailable) {\n            return <CSSTransition \n            classNames=\"order\"\n            key={key}\n            timeout={{enter:300, exit: 300}}\n            transitionAppear={true}>\n            <li>\n                Sorry { fish ? fish.name : 'fish'} is no longer available\n            </li>\n            </CSSTransition>\n        }\n        return <CSSTransition \n                    classNames=\"order\"\n                    key={key}\n                    timeout={{enter:5000, exit: 5000}}>\n                        <li key={key} style={{listStyle: 'none'}}>\n                            <span>{count}</span> \n                            lbs {fish.name}\n                            {formatPrice(count * fish.price)}\n                        <button onClick={() => this.props.removeOrder(key)}>&times;</button>\n                    </li>\n                </CSSTransition>\n    }\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key)=> {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === 'available';\n            if(isAvailable) {\n                return prevTotal + (count * fish.price)\n            }\n            return prevTotal;\n        }, 0)\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order</h2>\n                {/* <ul>\n                    {orderIds.map(this.renderOrder)}\n                    {/* {orderIds.map(key => <li>{key}</li>)} */}\n                {/* </ul> */} \n                <TransitionGroup component='ul'>\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className=\"total\">\n                    total: <strong>{formatPrice(total)}</strong>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Order"]},"metadata":{},"sourceType":"module"}